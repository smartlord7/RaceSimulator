/** Project RaceSimulator - LEI, University of Coimbra, 2nd year, 2nd semester - Operating Systems
*
* @author
*  - Joao Filipe Guiomar Artur, 2019217853
*  - Sancho Amaral Simoes, 2019217590
*
* @date 31/03/2021
*/

#ifndef RACESIMULATOR_C_RACE_CONFIG_H
#define RACESIMULATOR_C_RACE_CONFIG_H

// region constants

#define RACE_CONFIG "RACE_CONFIG"
#define true 1
#define false 0
#define MAX_BUFFER_SIZE 512
#define NULL_STR_SIZE 5

// endregion constants

// region forward declarations

typedef struct race_config_t race_config_t;

// endregion forward declarations

// region structures

/** @struct race_config_t
 *  @brief Struct that represents the configuration of a race.
 *
 *  @var race_config_t::time_units_per_sec
 *  The number of time units per second (timescale).
 *
 *  @var race_config_t::lap_distance
 *  The distance, in meters, of a race lap.
 *
 *  @var race_config_t::malfunction_interval
 *  The interval, in time units, between two random malfunctions randomly generated by the malfunction_manager process and assigned to a random race car of each race team.
 *
 *  @var race_config_t::min_repair_time
 *  The minimum time, in time units, that it takes for a race car to be repaired.
 *
 *  @var race_config_t::max_repair_time
 *  The maximum time, in time units, that it takes for a race car to be repaired.
 *
 *  @var race_config_t::fuel_tank_capacity
 *  The capacity, in liters, of each race car fuel tank.
 *
 *  @var race_config_t::laps_per_race
 *  The number of laps per race.
 *
 *  @var race_config_t::num_teams
 *  The number of teams participating in a race.
 *
 *  @var race_config_t::max_cars_per_team
 *  The maximum number of cars per team in a race.
 *
 */
struct race_config_t {
    float time_units_per_sec,
            lap_distance,
            malfunction_interval,
            min_repair_time,
            max_repair_time,
            fuel_tank_capacity;
    int laps_per_race, num_teams, max_cars_per_team;
};

// endregion structures

// region public functions prototypes


/** @def race_config
 *  @brief Function that creates a new race config (constructor).
 *
 *  @param time_units_per_sec
 *  The number of time units per second (timescale).
 *
 *  @param lap_distance
 *  The distance, in meters, of a race lap.
 *
 *  @param malfunction_interval
 *  The interval, in time units, between two random malfunctions randomly generated by the malfunction_manager process and assigned to a random race car of each race team.
 *
 *  @param min_repair_time
 *  The minimum time, in time units, that it takes for a race car to be repaired.
 *
 *  @param max_repair_time
 *  The maximum time, in time units, that it takes for a race car to be repaired.
 *
 *  @param fuel_tank_capacity
 *  The capacity, in liters, of each race car fuel tank.
 *
 *  @param laps_per_race
 *  The number of laps per race.
 *
 *  @param num_teams
 *  The number of teams participating in a race.
 *
 *  @param max_cars_per_team
 *  The maximum number of cars per team in a race.
 *
 */
race_config_t * race_config(float time_units_per_sec, float lap_distance, float malfunction_interval, float min_repair_time,
                            float max_repair_time, float fuel_tank_capacity, int laps_per_race, int num_teams, int max_cars_per_team);

/**
 * @def race_config_to_string
 * @brief Function that retrieves a string representation of a race config.
 *
 * @param cfg
 * The race configuration.
 *
 * @return a string holding the race configurations information.
 *
 * @throws MemoryAllocationException if the malloc call for the string returns a NULL pointer.
 *
 */
char * race_config_to_string(race_config_t * cfg);

// endregion public functions prototypes

#endif //RACESIMULATOR_C_RACE_CONFIG_H